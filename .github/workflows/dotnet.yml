name: Build & Test

on: [push, pull_request]

jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        working-directory: ./src
        shell: pwsh
    outputs:
      semver: ${{ steps.gitversion.outputs.semver }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - uses: actions/cache@v2
        id: cache
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
      
      - name: Restore Packages
        # if: steps.cache.outputs.cache-hit != 'true'
        run: dotnet restore _ALL.sln --use-lock-file
      
      - name: Build
        run: msbuild -m -t:Rebuild -p:Configuration=Release -bl:opc-ua-pubsub-dotnet.binlog -noconlog _All.sln
      
      - name: Archive Build Log
        uses: actions/upload-artifact@v2
        if: ${{ success() || failure() }}
        with:
          name: log-win-x64-release
          path: |
            src/*.binlog
      
      - name: Store SemVer
        id: gitversion
        run: |
          Write-Host "::set-output name=semver::$($env:GitVersion_SemVer)"
      
      - name: Create zip
        run: |
          $sourceFolder = Join-Path $env:GITHUB_WORKSPACE "src" | Join-Path -ChildPath "_Out" | Join-Path -ChildPath "Release" | Join-Path -ChildPath "*"
          $outFolder = Join-Path $env:GITHUB_WORKSPACE "src" | Join-Path -ChildPath "_Out" | Join-Path -ChildPath "GitHub" 
          New-Item -ItemType Directory -Force -Path $outFolder
          $outPath = Join-Path $outFolder "win-x64-$($env:GitVersion_SemVer).zip"          
          Compress-Archive -DestinationPath $outPath -Path $sourceFolder -CompressionLevel Optimal
      
      - name: Archive Build Result
        uses: actions/upload-artifact@v2
        with:
          name: win-x64-release
          path: |
            src/_Out/GitHub

      - name: Create Nuget Packages
        run: |
          $packageOutFolder = Join-Path $env:GITHUB_WORKSPACE "src" | Join-Path -ChildPath "_Out" | Join-Path -ChildPath "NuGet"
          dotnet pack _ALL.sln --no-build --configuration Release --output $packageOutFolder

      - name: Archive NuGet Packages
        uses: actions/upload-artifact@v2
        with:
          name: nuget-win-x64-release
          path: |
            src/_Out/NuGet
          

      - name: Test
        run: |
          dotnet test --no-build --configuration Release

  release:
    if: github.ref == 'refs/heads/main'
    runs-on: windows-latest
    needs: build
    defaults:
      run:
        shell: pwsh
    steps:
      - name: Download Build Results
        uses: actions/download-artifact@v2
        with:
          name: win-x64-release

      - name: Download NuGet Packages
        uses: actions/download-artifact@v2
        with:
          name: nuget-win-x64-release

      - name: Publish to NuGet.org
        run: |
          dotnet nuget push "*.nupkg" --api-key $env:NUGET_API_KEY
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
          
      - name: Create Release
        run: |
          Write-Host "'${{ needs.build.outputs.semver }}'"
